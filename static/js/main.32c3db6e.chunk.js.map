{"version":3,"sources":["Flashcard.js","Flashcardlist.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","Flashcardlist","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlform","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32c3db6e.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n    const [flip, setFlip] = useState(false)\r\n    const [height, setHeight] = useState(\"initial\")\r\n    \r\n    const frontEl = useRef()\r\n    const backEl = useRef()\r\n\r\n    function setMaxHeight() {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height\r\n        const backHeight = backEl.current.getBoundingClientRect().height\r\n        setHeight(Math.max(frontHeight, backHeight, 100))\r\n    }\r\n\r\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", setMaxHeight)\r\n        return () => window.removeEventListener(\"resize\", setMaxHeight)\r\n    })\r\n    return (\r\n        <div \r\n            className={`card ${flip ? \"flip\" : \"\"}`}\r\n            style={{height: height}}\r\n            onClick={() => setFlip(!flip)}\r\n        >\r\n          <div className=\"front\" ref = {frontEl}>\r\n              {flashcard.question}\r\n              <div className=\"flashcard-options\">\r\n                  {flashcard.options.map(option => {\r\n                      return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n                  })}\r\n              </div>\r\n          </div>\r\n          <div className=\"back\" ref = {backEl}>{flashcard.answer}</div> \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\n\r\nexport default function Flashcardlist({ flashcards }) {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashcards.map(flashcard => {\r\n                return <Flashcard flashcard = {flashcard} key={flashcard.id} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Flashcardlist from './Flashcardlist';\r\nimport \"./app.css\"\r\nimport axios from \"axios\"\r\n\r\nfunction App() {\r\n  const [flashcards, setFlashcards] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n\r\n  const categoryEl = useRef()\r\n  const amountEl = useRef()\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://opentdb.com/api_category.php\")\r\n    .then(res => {\r\n      setCategories(res.data.trivia_categories)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  function decodeString(str){\r\n    const textArea = document.createElement(\"textarea\")\r\n    textArea.innerHTML = str\r\n    return textArea.value\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    axios\r\n    .get(\"https://opentdb.com/api.php\", {\r\n      params: {\r\n        amount: amountEl.current.value,\r\n        category: categoryEl.current.value\r\n      }\r\n    })\r\n    .then(res => {\r\n      setFlashcards(res.data.results.map((questionItem, index) => {\r\n       const answer = questionItem.correct_answer\r\n       const options = [\r\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\r\n          answer\r\n         ]\r\n       return {\r\n          id: `${index}-${Date.now()}`,\r\n          question: decodeString(questionItem.question),\r\n          answer: decodeString(questionItem.correct_answer),\r\n          options: options.sort(() => Math.random() - .5)\r\n        }\r\n      }))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className = \"header\" onSubmit={handleSubmit}>\r\n        \r\n        <div className = \"form-group\">\r\n          <label htmlform=\"category\">Category</label>\r\n          <select id=\"category\" ref={categoryEl}>\r\n            {categories.map(category => {\r\n              return <option value={category.id} key={category.id}>{category.name}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n      \r\n        <div className=\"form-group\">\r\n          <label htmlform=\"amount\">Number of Questions</label>  \r\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />   \r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <button className=\"btn\">Generate</button>\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div className=\"container\">\r\n        <Flashcardlist flashcards={flashcards} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}